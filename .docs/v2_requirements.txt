V2 REQUIREMENTS
---------------
Build v2 app by COPYING /webapp/ folder to new folder /webapp_v2/.
COPY THE FILES - then modify to add v2 features below.
DO NOT rewrite the app AT ALL. The v1 front-end was thoroughly tested and works well.
DO NOT CHANGE ANY FUNCTIONALITY if not explicitly required below.

IMPORTANT: Review the architecture plan before executing changes. How will you ensure it meets the requirements?
We'll review & adjust your plan, then you build the v2 app changes.
I will test locally before deploying in GCP to overwrite existing v1 at the same URL and cloud run slot.

V2 changes:

- A "Collection" in firestore simply holds relationships to ONE OR MORE Spotify Playlist IDs

- For each "Collection", Firestore holds playlist metadata including: 
  The unique spotify playlist IDs in collection, their Art url, playlist track count, owner, etc.

- The "unique songs" present in each collection are a combination of Playlist(s) in that collection.
  IF a spotify track id exists in two playlists (in same collection), it must only appear as one 'song' in a collection. 
  (leverage Spotify's unique track id)

- ONLY when a collection is "loaded", a background task should fetch playlists in the collection, finding new OR removed tracks.
  If new tracks were added in Spotify, firestore updates with those new tracks in the background.
  If tracks are removed, they are FLAGGED in firestore (NOT removed from the collection until the user takes action on a flagged track to delete from a collection).

- Retain current functionality where user can edit lyrics, notes, and BPM info - saved PER UNIQUE SONG ID IN THE COLLECTION.
  IF one Spotify track ID is present in two collections, each collection has their own custom lyric, notes, and bpm information saved. 
  (different bands need different notes and tempo)

- When I "select playlist" in v2 (shortcut 'p'), this now "links" a playlist to the current open collection.

- Playlist memory works similar to v1. It remembers ALL playlists ever selected in this app (from ANY user or collection).
  Only SELECTED playlist IDs are linked to the current collection.
  The Playlist UI needs a way to differentiate between Playlists "in the collection" versus "other playlists in memory"...
  And of course the text input to add a new playlist URL.

- The 'Song chooser' in v2 (shortcut 's') shows me all unique song ids in this collection ONLY.
  Song chooser supports three sorting options in v2. Preferred sort setting is remembered per user in local storage.
	- by Song Name (default sorting)
	- by Artist Name
	- by Playlist (using each playlist's defined ordering)

- The 'Collection Chooser' and 'Edit Collection' would need some improvements to unlink playlists from that collection too.
  Perhaps consider a better way to manage Collections and their linked playlists in a single UI

- When a playlist is 'unlinked' from a collection, songs would be flagged "removed" in that collection IF no other playlist in the collection has that same song id.

- User can later take action to DELETE the "removed" songs (click a trash icon) from within Song Chooser.
  A confirmation is needed before deleting.

I WANT TO USE NEW TABLES in v2. Do not change v1 data tables (I may roll the app back).
I think I have already deployed the required v2 indexes in Firestore (confirm in my Terraform files).


---- TO DO v2 ---

- don't need every file name suffixed "_v2" (top-level folder name webapp_v2 is enough).

- requirements.txt or  webapp_v2\requirements.txt ???

- Dockerfile or webapp_v2\Dockerfile ???

- delete deploy.ps1?

- update run-local.bat ? (is it needed? does it even work?  replace with RUN-LOCAL.MD instead?)
  â†’ tech the dev how to fish... dont fish for him

